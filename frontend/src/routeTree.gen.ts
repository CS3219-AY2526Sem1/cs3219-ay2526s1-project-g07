/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as LoginRouteImport } from './routes/login'
import { Route as HomeRouteImport } from './routes/home'
import { Route as HistoryRouteImport } from './routes/history'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CollabSessionIdRouteImport } from './routes/collab.$sessionId'
import { Route as AdminUsersRouteImport } from './routes/admin.users'
import { Route as AdminQuestionsRouteImport } from './routes/admin.questions'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeRoute = HomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRouteImport,
} as any)
const HistoryRoute = HistoryRouteImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CollabSessionIdRoute = CollabSessionIdRouteImport.update({
  id: '/collab/$sessionId',
  path: '/collab/$sessionId',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminUsersRoute = AdminUsersRouteImport.update({
  id: '/admin/users',
  path: '/admin/users',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminQuestionsRoute = AdminQuestionsRouteImport.update({
  id: '/admin/questions',
  path: '/admin/questions',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/history': typeof HistoryRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/signup': typeof SignupRoute
  '/admin/questions': typeof AdminQuestionsRoute
  '/admin/users': typeof AdminUsersRoute
  '/collab/$sessionId': typeof CollabSessionIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/history': typeof HistoryRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/signup': typeof SignupRoute
  '/admin/questions': typeof AdminQuestionsRoute
  '/admin/users': typeof AdminUsersRoute
  '/collab/$sessionId': typeof CollabSessionIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/history': typeof HistoryRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/signup': typeof SignupRoute
  '/admin/questions': typeof AdminQuestionsRoute
  '/admin/users': typeof AdminUsersRoute
  '/collab/$sessionId': typeof CollabSessionIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/history'
    | '/home'
    | '/login'
    | '/profile'
    | '/signup'
    | '/admin/questions'
    | '/admin/users'
    | '/collab/$sessionId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/history'
    | '/home'
    | '/login'
    | '/profile'
    | '/signup'
    | '/admin/questions'
    | '/admin/users'
    | '/collab/$sessionId'
  id:
    | '__root__'
    | '/'
    | '/history'
    | '/home'
    | '/login'
    | '/profile'
    | '/signup'
    | '/admin/questions'
    | '/admin/users'
    | '/collab/$sessionId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HistoryRoute: typeof HistoryRoute
  HomeRoute: typeof HomeRoute
  LoginRoute: typeof LoginRoute
  ProfileRoute: typeof ProfileRoute
  SignupRoute: typeof SignupRoute
  AdminQuestionsRoute: typeof AdminQuestionsRoute
  AdminUsersRoute: typeof AdminUsersRoute
  CollabSessionIdRoute: typeof CollabSessionIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/history': {
      id: '/history'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof HistoryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/collab/$sessionId': {
      id: '/collab/$sessionId'
      path: '/collab/$sessionId'
      fullPath: '/collab/$sessionId'
      preLoaderRoute: typeof CollabSessionIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/questions': {
      id: '/admin/questions'
      path: '/admin/questions'
      fullPath: '/admin/questions'
      preLoaderRoute: typeof AdminQuestionsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HistoryRoute: HistoryRoute,
  HomeRoute: HomeRoute,
  LoginRoute: LoginRoute,
  ProfileRoute: ProfileRoute,
  SignupRoute: SignupRoute,
  AdminQuestionsRoute: AdminQuestionsRoute,
  AdminUsersRoute: AdminUsersRoute,
  CollabSessionIdRoute: CollabSessionIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
